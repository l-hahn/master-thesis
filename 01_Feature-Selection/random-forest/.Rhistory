a = 9.498197009598229E-4
a - 0.000965153077487811
a - (0.000965153077487811*1.1)
a - (0.000965153077487811*1.2)
biocLite("DESeq")
source("http://www.bioconductor.org/biocLite.R")
biocLite("DESeq")
strsplit("GAATAC","")
strsplit("GAATAC","")[[1]]
Test = data.frame(strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]])
Test
colnames(Test) = paste("V",1:ncol(Test),sep="")
Test
table(Test)
table(Test[1])
c("A","C","G","T")[table(Test[1])]
table(Test[1])
table(Test[2])
table(Test[3])
table(Test[4])
table(Test)
table(Test[1])
rbind(table(Test[1]),table(Test[2])
)
merge(table(Test[1]),table(Test[2]))
table(Test[1])
?tapply
apply(Test,2,table)
test = apply(Test,2,table)
View(test)
unlist(test)
Reduce("+", lapply(Test, "[[", 2))
lapply(Test, "[[", 2)
Reduce("+",Test)
Reduce("+", lapply(list(iris, iris, iris), "[[", 2))
Reduce("+", lapply(Test, "[[", 1))
Test
Reduce("+", lapply(test, "[[", 1))
Reduce("+", lapply(test, "[[", 2))
test
test = as.data.frame(apply(Test,2,table))
test = data.frame(apply(Test,2,table))
apply(Test,2,table)
t(apply(Test,2,table))
test = data.frame(apply(Test,2,table))
test = apply(Test,2,table)
test
View(test)
test[[2]]
colnames(test[[2]])
test[[2]]
a=test[[2]]
colnames(a)
a
names(a)
StackTable = function(Data){
print(table(Data))
}
apply(Test,1,StackTable)
StackTable = function(Data){
print(Data)
print(table(Data))
}
apply(Test,1,StackTable)
StackTable = function(Data){
print(Data)
print(table(Data))
}
apply(Test,1,StackTable)
apply(Test,2,StackTable)
apply(Test,1,StackTable)
StackTable = function(Data){
print(Data)
}
apply(Test,1,StackTable)
StackTable = function(Data){
print("Hi")
print(Data)
}
apply(Test,1,StackTable)
View(Test)
StackTable = function(Data){
print(t(Data))
}
Test = data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]])
colnames(Test) = paste("V",1:ncol(Test),sep="")
apply(Test,1,StackTable)
StackTable = function(Data){
print(t(Data))
}
Test = t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]]))
colnames(Test) = paste("V",1:ncol(Test),sep="")
apply(Test,1,StackTable)
colnames(Test) = paste("V",1:ncol(Test),sep="")
StackTable = function(Data){
print(t(Data))
}
Test = t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]]))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
apply(Test,1,StackTable)
StackTable = function(Data){
print(Data)
}
Test = t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]]))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
apply(Test,2,StackTable)
StackTable = function(Data){
table(Data)
}
Test = t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]]))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
apply(Test,2,StackTable)
StackTable = function(Data){
Tab = table(Data)
}
Test = t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]]))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
apply(Test,2,StackTable)
Tab
StackTable = function(Data){
Tab = table(Data)
}
Test = as.data.frame(t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]]))
colnames(Test) = paste("V",1:ncol(Test),sep=""))
rownames(Test) = 1:nrow(Test)
apply(Test,2,StackTable)
StackTable = function(Data){
Tab = table(Data)
}
Test = as.data.frame(t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]]))
colnames(Test) = paste("V",1:ncol(Test),sep=""))
rownames(Test) = 1:nrow(Test)
apply(Test,2,StackTable)
StackTable = function(Data){
Tab = table(Data)
}
Test = as.data.frame(t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]])))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
apply(Test,2,StackTable)
View(Test)
table(Data[1])
table(Test[1])
names(table(Test[1])) %in% c("A","C","G","T")
c("A","C","G","T") %in% names(table(Test[1]))
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(table(Test[1])))]
Tab
Tab = table(Test[1])
Tab
c(Tab,0,0)
Tab = c(Tab,0,0)
names(Tab)
Tab = table(Test[1])
Tab
names(Tab) = c(names(Tab),Missing)
Tab = c(Tab,0,0)
names(Tab) = c(names(Tab),Missing)
names(Tab) = c(names(Tab)[1:(length(Base - length(Missing)))],Missing)
(length(Base - length(Missing)))
(length(Base) - length(Missing))
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
Tab
order(names(Tab))
Tab[order(names(Tab))]
StackTable = function(Data){
Tab = table(Data)
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(table(Data)))]
Tab = c(Tab,0,0)
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
return(Tab[order(names(Tab))])
}
Test = as.data.frame(t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]])))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
apply(Test,2,StackTable)
Test = apply(Test,2,StackTable)
View(Test)
Tab = table(Test[1])
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(table(Data)))]
Tab = c(Tab,0,0)
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
Tab = table(Test[1])
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab)))]
Tab = c(Tab,0,0)
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
Tab = table(Test[1])
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab)))]
Tab = c(Tab,0,0)
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
Tab[order(names(Tab))]
Tab = table(Test[1])
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab)))]
Tab = table(Test[1])
Tab
Test[1]
Tab = table(Test[1])
Tab
Test = as.data.frame(t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]])))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
Tab = table(Test[1])
Tab
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab)))]
Base %in% names(Tab)
!(Base %in% names(Tab))
Base[!(Base %in% names(Tab)))]
Base[!(Base %in% names(Tab))]
Missing = Base[!(Base %in% names(Tab))]
Tab = c(Tab,0,0)
Tab
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
Tab
Tab[order(names(Tab))]
Tab = table(Test[2])
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab))]
Tab = c(Tab,0,0)
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
Tab[order(names(Tab))]
Tab = table(Test[2])
Tab
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab))]
Tab = c(Tab,0,0)
Tab = table(Test[2])
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab))]
Tab = c(Tab,rep(0,length(Missing)))
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
Tab[order(names(Tab))]
StackTable = function(Data){
Tab = table(Test[2])
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab))]
Tab = c(Tab,rep(0,length(Missing)))
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
return(Tab[order(names(Tab))])
}
StackTable = function(Data){
Tab = table(Data)
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab))]
Tab = c(Tab,rep(0,length(Missing)))
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
return(Tab[order(names(Tab))])
}
Test = as.data.frame(t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]])))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
Test = apply(Test,2,StackTable)
StackTable = function(Data){
Tab = table(Data)
Base = c("A","C","G","T")
Missing = Base[!(Base %in% names(Tab))]
Tab = c(Tab,rep(0,length(Missing)))
names(Tab) = c(names(Tab)[1:(length(Base) - length(Missing))],Missing)
return(Tab[order(names(Tab))])
}
Test = as.data.frame(t(data.frame(
strsplit("GAATAC","")[[1]],
strsplit("GACAAC","")[[1]],
strsplit("GGTTAC","")[[1]],
strsplit("GTTAAC","")[[1]],
strsplit("CGATCG","")[[1]],
strsplit("CATACG","")[[1]],
strsplit("CAGTGG","")[[1]],
strsplit("CTTAGG","")[[1]])))
colnames(Test) = paste("V",1:ncol(Test),sep="")
rownames(Test) = 1:nrow(Test)
Test2 = apply(Test,2,StackTable)
View(Test2)
View(Test2)
View(Test2)
getwd()
write.table(Test2,"test.dat")
Test
apply(Test,1,paste0)
mypaste = function(Data){
return(paste0(Data,collapse=""))
}
apply(Test,1,mypaste)
Strs = apply(Test,1,mypaste)
unique(Strs)
sort(Strs)
setwd("~/Schreibtisch/Master/master-thesis/01_Feature-Selection/random-forest/")
Data = read.table("phasedFullData_10000_T1000_FAll.varimp",header=T)
plot(Data)
